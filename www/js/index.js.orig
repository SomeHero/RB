
//GLOBAL VARS
var viewport = {
    width  : $(window).width(),
    height : $(window).height(),
	panelwidth : $('#all-container').width()
};
<<<<<<< HEAD
var myScroll;
var currentView;
=======

var appui = {
footerHeight : 49,
headerHeight : 47
};

var myScroll = null;
var newsScroll = null;
var eventsScroll = null;
var homeScroll = null;
var actionScroll = null;
var bundlesScroll= null;
>>>>>>> upstream/jquery-mobile

var aboutModal = {ModalID: "modal-about", PageID: "about", PageHeading: "About", PageTitle: "The About Page", PageContent: "<p>Lorem ipsum dolor sit amet, sed inermis persequeris deterruisset eu, ei quod solet commodo quo. Cum an bonorum nominavi voluptua, has at hinc audiam. Eirmod reformidans mea ei, has cetero eligendi ullamcorper et. Eu nibh prima eum, quem hinc splendide eu vel. Graeco percipit prodesset mei et, ex duo vide omnis. Nulla postulant imperdiet per et, sanctus graecis honestatis duo et, ei pro eripuit apeirian.</p>"};
var createAccountContent = '<div class="fb-button"><button type="button" id="fb-btn" class="rb-btn fb">Connect with Facebook</button></div><div class="or"> - &nbsp;OR&nbsp; -</div><div id="signin-form"><form action="#"  method="post"><span class="form-holder"><input type="email" id="username" class="required" placeholder="Email Address" name="Email"></span><span class="form-holder"><input type="password" id="password" class="required" placeholder="Password" name="Password"></span><button type="button" id="create-account-submit" class="rb-btn blue">Create Account</button></form></div><div id="main-body-sub-links"><p style="text-align: center"><a href="#">Already a member?  Sign In</a></p></div>'
var createAccountModal = {ModalID: "modal-create-account", PageID: "create-account", PageHeading: "Create Account", PageTitle: "Create a Mobylyze Account", PageContent: createAccountContent};

var youContentAnon = {ContentID: "you-content-anon", PageContent:'<div class="fb-button"><button type="button" id="fb-btn" class="rb-btn fb">Connect with Facebook</button></div><div class="or"> - &nbsp;OR&nbsp; -</div><div id="signin-form"><form action="#"  method="post"><span class="form-holder"><input type="email" id="username" class="required" placeholder="Email Address" name="Email"></span><span class="form-holder"><input type="password" id="password" class="required" placeholder="Password" name="Password"></span><button type="button" id="signin-submit" class="rb-btn blue">Sign In with Email</button></form></div><div id="main-body-sub-links"><p style="text-align: center"><a href="#">Forgot password?</a>&nbsp; | &nbsp;<a id="btn-create-account" href="#" data-ajax="false">Create Account</a></p></div>'};
var youContentAuth = {ContentID: "you-content-auth", PageContent:'<div>Hi, Johnny</div><button type="button" id="signout-submit" class="rb-btn orange">Sign Out</button>'};

var transitionEnd = 'webkitTransitionEnd';
var userAuthenticated = false;

//GLOBAL FUNCTIONS

function whichTransitionEvent(){
    var t;
    var el = document.createElement('fakeelement');
    var transitions = {
      'transition':'transitionEnd',
      'OTransition':'otransitionend',
      'MSTransition':'msTransitionEnd',
      'MozTransition':'transitionend',
      'WebkitTransition':'webkitTransitionEnd'
    }

    for(t in transitions){
        if( el.style[t] !== undefined ){
            return transitions[t];
        }
    }
}

function resetSizing(){

	$('.modal-container').css('top', (viewport.height + 40) + 'px');
	$('#profile-container').css('width', (viewport.panelwidth  - 48) + 'px');
    $('#pages > div.page').css('width', viewport.panelwidth  + 'px');
    $('#all-container').css('height', viewport.height + 'px');
    $('#wrapper').css('height', (viewport.height - (appui.footerHeight + appui.headerHeight) + 'px'));
	$('.scroller.wf').css('height', (viewport.height - (appui.footerHeight + appui.headerHeight) + 'px'));
    $('#main-content').css('height', $('#pages > div.page.current').height() + 'px');
    $('div.page').css('min-height', viewport.height + 'px');
}
function resetViewport(){
    viewport.height = $(window).height();
    viewport.width = $(window).width();
    viewport.panelwidth = $('#all-container').width();
}
function resetPositioning(){
	$('body, html').css('top', '0px');
    $('.container').css('top', '0px');
    $('.container.slid-right').css("left", (viewport.panelwidth - 48) + "px");
	$('.modal-container.slid-up').css("top", "0px");
}
function hideOtherPages(){
$('#pages > div.page').css("display", "none");
$('#pages > div.page.current').css("display", "block");
}

function initScroll() {
setTimeout(function () {
homeScroll = new iScroll('home-scroller', {hideScrollbar: true, scrollbarClass: 'myScrollbar' });
newsScroll = new iScroll('news-scroller', {hideScrollbar: true, scrollbarClass: 'myScrollbar' });
eventsScroll = new iScroll('events-scroller', {hideScrollbar: true, scrollbarClass: 'myScrollbar' });
actionScroll = new iScroll('action-scroller', {hideScrollbar: true, scrollbarClass: 'myScrollbar' });
bundlesScroll = new iScroll('bundles-scroller', {hideScrollbar: true, scrollbarClass: 'myScrollbar' });
//hideOtherPages();
               }, 100);
}

function resetScroll(page){
setTimeout(function () {
if (page == "home"){
if (homeScroll != null){
homeScroll.refresh();
}else{
homeScroll = new iScroll('home-scroller', {hideScrollbar: true, scrollbarClass: 'myScrollbar' });
}
}else if (page == "news"){
if (newsScroll != null){
newsScroll.refresh();
}else{
newsScroll = new iScroll('news-scroller', {hideScrollbar: true, scrollbarClass: 'myScrollbar' });
}
}else if (page == "events"){
if (eventsScroll != null){
eventsScroll.refresh();
}else{
eventsScroll = new iScroll('events-scroller', {hideScrollbar: true, scrollbarClass: 'myScrollbar' });
}
}else if (page == "action"){
if (actionScroll != null){
actionScroll.refresh();
}else{
actionScroll = new iScroll('action-scroller', {hideScrollbar: true, scrollbarClass: 'myScrollbar' });
}
}else if (page == "bundles"){
if (bundlesScroll != null){
bundlesScroll.refresh();
}else{
bundlesScroll = new iScroll('bundles-scroller', {hideScrollbar: true, scrollbarClass: 'myScrollbar' });
}
}else{

}
}, 0);
}

function page(toPage, tabNum) {
    var toPage = $(toPage),
    fromPage = $("#pages .current");
    if (toPage.hasClass("current")){
		return;
    }else if (toPage === fromPage) {
        //attempt to fix odd bug where nothing is current
        $("#pages div.page.current").removeClass("current");
        $("#pages div.page").css("display", "none"); //hide all
        toPage.addClass("current");
		toPage.css("display", "block");
	}else{
        fromPage.removeClass("current");
        $("#pages div.page").css("display", "none"); //hide all
        toPage.addClass("current");
        toPage.css("display", "block");
        resetSizing();
	}
	
if (tabNum == 3)
{
getHome();
$('header h1#hd-tab').empty();
$('header h1#hd-tab').addClass("hd-logo");
}else{
//not home tab
$('header h1#hd-tab').removeClass("hd-logo");
if (tabNum == 1){
getNews();
$('header h1#hd-tab').text("News");
}
else if (tabNum == 2){
getEvents();
$('header h1#hd-tab').text("Events");
}
else if (tabNum == 4){
getAction();
$('header h1#hd-tab').text("Take Action");
}
else if (tabNum == 5){
getBundles();
$('header h1#hd-tab').text("Bundles");
}
else {

}
}
	
}

function createModal(modalName) {
var source   = $("#modal-template").html();
var template = Handlebars.compile(source);
var data = modalName;
var modal = template(data);
$('#all-container').append(modal);
resetSizing();
$('.modal-container#modal-'+ modalName.PageID).css('top', (viewport.height + 40) + 'px');
$('.modal-container#modal-'+ modalName.PageID).animate({top: "0px", useTranslate3d:true, leaveTransforms:false }, 400, function() {
//$('.modal-container').removeClass("active");
$('.modal-container#modal-'+ modalName.PageID).addClass("active");
$('.modal-container#modal-'+ modalName.PageID).addClass("slid-up");
});

}
function compileTemplateStatic(content){

}

function getNews(){
if(window.plugins != undefined && ($('#news-list li').length == 0)){
          window.plugins.drupal.openAnonymousSession(successCallback, failureCallback);
          window.plugins.drupal.newsGetIndex(function(result) {
                                                     
                                                     var source   = $("#newsitem-template").html();
                                                     var template = Handlebars.compile(source);
                                                     var data = { nodes: result }
                                                     var item = template(result);
                                                     $('#news-list').append(item);
                                                     resetSizing();
                                                     resetScroll("news");
                                                     },failureCallback);
}else{
resetSizing();
resetScroll("news");
}
}
function getEvents(){
if(window.plugins != undefined && ($('#events-list li').length == 0)){
          window.plugins.drupal.openAnonymousSession(successCallback, failureCallback);
          window.plugins.drupal.eventsGetIndex(function(result) {
                                                     
                                                     var source   = $("#eventitem-template").html();
                                                     var template = Handlebars.compile(source);
                                                     var data = { nodes: result }
                                                     var item = template(result);
                                                     $('#events-list').append(item);
                                                     
                                                     resetSizing();
                                                     resetScroll("events");
                                                     },failureCallback);
}else{
resetSizing();
resetScroll("events");
}
}
function getHome(){
if(window.plugins != undefined && ($('#home-list li').length == 0)){
          window.plugins.drupal.openAnonymousSession(successCallback, failureCallback);
          window.plugins.drupal.petitionsGetIndex(function(result) {
                                                     $("#home-list").empty();
                                                     
                                                     var source   = $("#homeitem-template").html();
                                                     var template = Handlebars.compile(source);
                                                     var data = { nodes: result }
                                                     var item = template(result);
                                                     $('#home-list').append(item);
													resetSizing();
                                                     resetScroll("home");
													 
                                                     },failureCallback);
}else{
resetSizing();
resetScroll("home");
}
}
function getAction(){
resetSizing();
resetScroll("action");
}
function getBundles(){
resetSizing();
resetScroll("bundles");
}



//DRUPAL STUFF?
function successCallback() {
    console.log('success');
};
function nodeSuccessCallback(result) {
    var nodes = result.nodes;
    for (var i = 0; i < nodes.length; i++) {
        var html = "<li data-nid='" + nodes[i].nid + "'><img src='" + nodes[i].logo + "' />" + nodes[i].title +  "</li>";
        $(html).appendTo( '#home-items' );
    }
    resetSizing();
};
function failureCallback() {
    console.log('failed');
};

function getUser() {
    if(window.localStorage["user"] != null)
    {
        var currentUser = JSON.parse(window.localStorage["user"]);

        return currentUser;
    }
    
    return null;
};
function loginUser() {
    
};
function logoutUser(success, failed) {
    
    window.plugins.drupal.logout(function() {
                                 console.log('user has been logged out');
                                 success();
                                 }, function() {
                                 console.log('logout failed');
                                 failed();
                                 });
};



var app = {

    // Application Constructor
    initialize: function() {
        console.log('initialze app');
        this.bindEvents();
    },
    // Bind Event Listeners
    //
    // Bind any events that are required on startup. Common events are:
    // `load`, `deviceready`, `offline`, and `online`.
    bindEvents: function() {
        console.log('bindEvents app');
        document.addEventListener('deviceready', this.onDeviceReady, false);
        
        //Ryan - I had to comment this out to run correctly from the simulator
		//document.addEventListener('DOMContentLoaded', this.onDeviceReady, false); //THIS IS JUST FOR DEBUGGING!
    },
    // deviceready Event Handler
	onDeviceReady: function() {
	//set vars
	transitionEnd = whichTransitionEvent();
    viewport = {
        width  : $(window).width(),
        height : $(window).height(),
        panelwidth : $('#all-container').width()
    };
    
	//run set up functions
	getHome();
    resetSizing();
    resetScroll('home');
    
    $(window).bind('resize', function () {
                   resetViewport();
                   resetSizing();
				   resetPositioning();
                   resetScroll();
                   });
    
    $('#tab-bar a').on('click', function(e){
                       e.preventDefault();
                       var toPage = $(this.hash);
                       var fromPage = $("#pages .current");
                       $('#tab-bar a.current').removeClass("current");
                       $(this).addClass("current");
					   $('#tab-bar li.current').removeClass("current");
					   $(this).parent().addClass("current");
                       page(toPage, $(this).parent().attr("tab"));
    });
    
$('#profile-closer').on('click', function(e){
//ANIMATE PROFILE OUT
e.preventDefault();
$('#profile-closer').css("display", "none");
$('#tab-container').animate({left: "0px", useTranslate3d:true, leaveTransforms:false }, 300, function() {
	$('#tab-container').removeClass("slid-right");
	$('#profile-link').removeClass("slid").addClass("unslid");
});
                            

                            
                            });
<<<<<<< HEAD
    $('.unslid').on('click', function(e){
                    e.preventDefault();
                    var user = getUser();
                    
                    if(user == null)
                    {
                    $("signin").show();
                    $("profile").hide();
                    } else {
                    $("signin").hide();
                    $("profile").show();
                    }
                    $('#tab-container').addClass("slid-right");
                    $('#tab-container').css("left", (viewport.panelwidth - 48) + "px");
                    $(this).addClass("slid");
                    $(this).removeClass("unslid");
                    $('#profile-closer').css("display", "block");
=======
    $('#tab-container').on('click', '#profile-link.unslid', function(e){
//ANIMATE PROFILE IN
	e.preventDefault();
$('#profile.page').empty();
var source   = $("#html-content-template").html();
var template = Handlebars.compile(source);
var data = youContentAnon;
if (userAuthenticated == true){
data = youContentAuth;
}
var content = template(data);
$('#profile.page').append(content);

	$('#tab-container').animate({left: (viewport.panelwidth - 48) + "px", useTranslate3d:true, leaveTransforms:false }, 300, function() {
		$('#profile-link').removeClass("unslid").addClass("slid");
		$('#tab-container').addClass("slid-right");
		$('#profile-closer').css("display", "block");
	});

>>>>>>> upstream/jquery-mobile
                    });
    $('.btn-about').on('click', function(e){
                       e.preventDefault();
                       createModal(aboutModal);
                       });
$('#all-container').on('click', '.modal-container.active .btn-modal-back', function(e){
e.preventDefault();
$('.modal-container.active').animate({top: (viewport.height + 40) + 'px', useTranslate3d:true, leaveTransforms:false }, 500, function() {
$('.modal-container.active').removeClass("slid-up");
$('.modal-container.active').remove();
$('#all-container .modal-container').last().addClass("active");
});

						//	$('.modal-container.active').css("top", "105%");
                        //   $('.modal-container.active').removeClass("slid-up");
						//   $('.modal-container.active').on(transitionEnd, function(e){
						//   $('.modal-container.active').remove();
						//   $('#all-container .modal-container').last().addClass("active");
						//   });
						   
                           });
$('#all-container').on('click', '#btn-create-account', function(e){
                           e.preventDefault();
                           createModal(createAccountModal);
                           });
	
    $('#all-container').on('blur', 'input', function () {
                   console.log('resetting');
                   resetPositioning();
                       });
    
    //TESTING
    $('div.page ul li').on('click', function(e){
                        alert('SHOW DETAILS');
                        });
    
<<<<<<< HEAD
    $('#home-list').bind('inview', function(event, isInView) {
                         
          if(isInView && currentView != 'home'){
          
          currentView = 'home';
                         
          console.log("home show");
          
          $("#home-list").empty();
                         
          window.plugins.drupal.eventsGetIndex(function(result) {
                                               
                                               var currentUser = getUser();
                                               if(currentUser != null)
                                               {
                                                   console.log(currentUser.user.name);
                                               }
                                               
=======
	

	//SIGN IN SUMMIT
    $('#profile-container').on('click', '#signin-submit', function(e) {
                           e.preventDefault();
                           var userName = "admin";
                           var password = "turnkey";
                           window.plugins.drupal.login(userName, password, function() {
                                                       userAuthenticated = true;
$('#profile.page').empty();
var source   = $("#html-content-template").html();
var template = Handlebars.compile(source);
var data = youContentAnon;
if (userAuthenticated == true){
data = youContentAuth;
}
var content = template(data);
$('#profile.page').append(content);
alert('Logged In');
                                                       }, function() {
                                                       alert('login failed');
                                                       });
     });
    
   
},

    // Update DOM on a Received Event
    receivedEvent: function(id) {
        var parentElement = document.getElementById(id);
        var listeningElement = parentElement.querySelector('.listening');
        var receivedElement = parentElement.querySelector('.received');

        listeningElement.setAttribute('style', 'display:none;');
        receivedElement.setAttribute('style', 'display:block;');

        console.log('Received Event: ' + id);
    },
};
                        jQuery(function($) {
                               
                               var _oldShow = $.fn.show;
                               
                               $.fn.show = function(speed, oldCallback) {
                               return $(this).each(function() {
                                                   var
                                                   obj         = $(this),
                                                   newCallback = function() {
                                                   if ($.isFunction(oldCallback)) {
                                                   oldCallback.apply(obj);
                                                   }
                                                   
                                                   obj.trigger('afterShow');
                                                   };
                                                   
                                                   // you can trigger a before show if you want
                                                   obj.trigger('beforeShow');
                                                   
                                                   // now use the old function to show the element passing the new callback
                                                   _oldShow.apply(obj, [speed, newCallback]);
                                                });
                               }
                            });
                               
       


	//HOME LOAD
	
	/*
    $('#home')
    .bind('beforeShow', function() {

    })
    .bind('afterShow', function() {
    resetSizing();
    resetScroll("home");
    })
    .show(1000, function() {
          window.plugins.drupal.openAnonymousSession(successCallback, failureCallback);
          window.plugins.drupal.petitionsGetIndex(function(result) {
                                                     $("#home-list").empty();
                                                     
>>>>>>> upstream/jquery-mobile
                                                     var source   = $("#homeitem-template").html();
                                                     var template = Handlebars.compile(source);
                                                     var data = { nodes: result }
                                                     var item = template(result);
                                                     $('#home-list').append(item);

                                                     },failureCallback);
                         }
                         });
    
<<<<<<< HEAD
    $('#news-list').bind('inview', function(event, isInView) {
        
         if (isInView && currentView != 'news') {

         currentView = news;
         console.log("news show");
                         $("#news-list").empty();
                         
=======
	
	
	//NEWS LOAD
    $('#news')
    .bind('beforeShow', function() {
          
          })
    .bind('afterShow', function() {
          
          })
    .show(1000, function() {
          window.plugins.drupal.openAnonymousSession(successCallback, failureCallback);
>>>>>>> upstream/jquery-mobile
          window.plugins.drupal.newsGetIndex(function(result) {
                                                    
                                                     var source   = $("#newsitem-template").html();
                                                     var template = Handlebars.compile(source);
                                                     var data = { nodes: result }
                                                     var item = template(result);
                                                     $('#news-list').append(item);
                                                     
                                                     resetSizing();
                                                     resetScroll("news");

                                                     },failureCallback);
                                             }
    });
    
        $('#events-list').bind('inview', function(event, isInView) {
            
            if (isInView && currentView != 'events') {
                               
                               currentView = events;
                               console.log("events show");
                               
                               $("#events-list").empty();
                               
          window.plugins.drupal.eventsGetIndex(function(result) {
                                                     
                                                     var source   = $("#eventitem-template").html();
                                                     var template = Handlebars.compile(source);
                                                     var data = { nodes: result }
                                                     var item = template(result);
                                                     $('#events-list').append(item);
                                                     
                                                     resetSizing();
                                                     resetScroll("events");
                                                     },failureCallback);
                               }
                          });

	//SIGN OUT SUMMIT
    $('#profile-container').on('click', '#signout-submit', function(e) {
                           e.preventDefault();
<<<<<<< HEAD
                           
                           var userName = "admin";
                           var password = "turnkey";
 
                           window.plugins.drupal.login(userName, password, function(result) {
                                                       window.localStorage["user"] =  JSON.stringify(result);
                                                       
                                                       $('#profile-closer').css("display", "none");
                                                       $('#tab-container').removeClass("slid-right");
                                                       $('#tab-container').css("left", "0px");
                                                       $(this).addClass("unslid");
                                                       $(this).removeClass("slid");
                                                       
=======
                          
                           window.plugins.drupal.logout(function() {
                                                       userAuthenticated = false;
$('#profile.page').empty();
var source   = $("#html-content-template").html();
var template = Handlebars.compile(source);
var data = youContentAnon;
if (userAuthenticated == true){
data = youContentAuth;
}
var content = template(data);
$('#profile.page').append(content);
alert('Logged Out');
>>>>>>> upstream/jquery-mobile
                                                       }, function() {
                                                       alert('logtout failed');
                                                       });
     });
<<<<<<< HEAD
        $("#user-logout-button").on('click', function(e) {
                                    e.preventDefault();
                                    
                                    logoutUser(function() {
                                               console.log('user logged out');
                                               },
                                               function() {
                                               console.log('user logged in');
                                               });
                                    
                                    });
    
    // Update DOM on a Received Event
    receivedEvent: function(id) {
        var parentElement = document.getElementById(id);
        var listeningElement = parentElement.querySelector('.listening');
        var receivedElement = parentElement.querySelector('.received');

        listeningElement.setAttribute('style', 'display:none;');
        receivedElement.setAttribute('style', 'display:block;');

        console.log('Received Event: ' + id);
    },
};
                        jQuery(function($) {
                               
                               var _oldShow = $.fn.show;
                               
                               $.fn.show = function(speed, oldCallback) {
                               return $(this).each(function() {
                                                   var
                                                   obj         = $(this),
                                                   newCallback = function() {
                                                   if ($.isFunction(oldCallback)) {
                                                   oldCallback.apply(obj);
                                                   }
                                                   
                                                   obj.trigger('afterShow');
                                                   };
                                                   
                                                   // you can trigger a before show if you want
                                                   obj.trigger('beforeShow');
                                                   
                                                   // now use the old function to show the element passing the new callback
                                                   _oldShow.apply(obj, [speed, newCallback]);
                                                });
                               }
                            });
                               
       



=======
	 */
>>>>>>> upstream/jquery-mobile
/*  Here is what a node looks like *
 var node = {
 title: "Sample Article",
 body: {
 und: [{
 value: "Sample Body"
 }]
 },
 type: 'article',
 language: 'und'
 }; */
	   
